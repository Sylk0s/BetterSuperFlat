import java.text.SimpleDateFormat

plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	maven {
		url 'https://masa.dy.fi/maven'
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-" + project.mod_version

minecraft {
	accessWidener =  file("src/main/resources/bettersuperflat.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:1.17.1"
	mappings "net.fabricmc:yarn:1.17.1+build.65"
	modImplementation "net.fabricmc:fabric-loader:0.14.8"

	//Fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.46.1+1.17"
}

task zipDatapack(type: Zip) {
	archiveFileName = project.archives_base_name + "-" + project.version + ".datapack.zip"
	group = "build"
	destinationDirectory = file('build/')
	from files('./datapack')
}

task generateJava(type: Copy) {
	def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'")
	df.setTimeZone(TimeZone.getTimeZone("UTC"))
	def templateContext = [
			version: project.version,
			timestamp: df.format(new Date()),
			minecraft_version: project.minecraft_version,
			yarn_mappings: project.yarn_mappings
	]
	inputs.properties templateContext // for gradle up-to-date check
	from 'src/template/java'
	into "$buildDir/generated/java"
	expand templateContext
}

sourceSets.main.java.srcDir "$buildDir/generated/java"
compileJava.dependsOn generateJava

processResources {
	// this will ensure that this task is re-run when there's a change
	inputs.property "version", project.version

	// replace stuff in fabric.mod.json, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"

		// add mod metadata
		expand "version": project.version
	}

	// copy everything else, that's not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}

	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
compileJava.options.encoding = "UTF-8"

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
//task sourcesJar(type: Jar, dependsOn: classes) {
//	from sourceSets.main.allSource
//}

jar {
	from "LICENSE"
}